services:
  app:
    container_name: digifaz-nest-prod
    build:
      context: ../
      dockerfile: docker/Dockerfile
      target: production # Utilise le stage production
    restart: unless-stopped
    env_file:
      - ../environments/prod/.env
    ports:
      - '${APP_EXTERNAL_PORT:-3001}:3000'
    environment:
      - NODE_ENV=production
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mysql:8.0
    container_name: digifaz-mysql-prod
    restart: unless-stopped
    env_file:
      - ../environments/prod/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '${DB_EXTERNAL_PORT:-3307}:3306'
    volumes:
      - db_data_prod:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p${MYSQL_ROOT_PASSWORD}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: digifaz-phpmyadmin-prod
    restart: unless-stopped
    env_file:
      - ../environments/prod/.env
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: ${PMA_PORT}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '${PHPMYADMIN_EXTERNAL_PORT:-8100}:80'
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data_prod:
